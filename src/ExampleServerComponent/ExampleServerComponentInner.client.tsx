import { useMemo } from "react";
import { useRecoilValue } from "recoil";
import { textState } from "../state/textState";
import { text2State } from "../state/text2State";

export const ExampleServerComponentInner = () => {
  const text = useRecoilValue(textState);
  const text2 = useRecoilValue(text2State);

  return (
    <>
      <div>SERVER? {(typeof window !== "object").toString()}</div>
      <div>TEXT STATE: {text}</div>
      <div>TEXT 2 STATE: {text2}</div>
    </>
  );
};

ExampleServerComponentInner.displayName = "ExampleServerComponentInner";

/**
 * This would be generated by the compiler because of the `.client.tsx` extension.
 */
export const useStates = () => {
  const text = useRecoilValue(textState);
  const text2 = useRecoilValue(text2State);

  return useMemo(
    () => [
      {
        state: textState,
        value: text,
      },
      {
        state: text2State,
        value: text2,
      },
    ],
    [text, text2]
  );
};
